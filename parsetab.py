
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\x11_\x96\x86\x04!\x8f(\x19\x92R\xe0\x1b\xc7\xf93'
    
_lr_action_items = {'PEEK':([111,151,153,167,195,217,249,307,322,327,347,348,349,351,353,354,356,],[137,137,-88,-71,-70,-77,-87,-78,-83,-89,-80,-90,-91,-81,-79,-82,-84,]),'TRANS':([0,1,4,41,50,56,67,88,110,123,167,168,169,174,175,187,190,195,234,236,237,239,245,292,293,310,312,316,],[6,6,-61,-56,-6,-7,-21,-55,-9,-16,-71,-25,-23,-24,-22,-17,-13,-70,-19,6,-18,-20,-15,-12,-11,-8,-10,-14,]),'STAR':([4,17,19,55,70,139,140,143,148,152,155,157,160,161,162,163,194,196,201,206,209,231,251,253,256,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,291,296,300,306,308,320,321,333,335,338,344,352,],[-61,-42,-41,-40,94,-125,-124,-103,-95,-92,-123,-94,-98,-128,216,-126,216,-97,216,-93,-119,-118,216,-99,-120,216,-127,216,216,216,-104,216,216,216,216,216,216,-105,216,216,216,216,216,-101,-122,-96,-121,-123,216,-100,-85,-102,216,-86,]),'SLASH':([4,17,19,55,139,140,143,148,152,155,157,160,161,162,163,194,196,201,206,209,231,251,253,256,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,291,296,300,306,308,320,321,333,335,338,344,352,],[-61,-42,-41,-40,-125,-124,-103,-95,-92,-123,-94,-98,-128,224,-126,224,-97,224,-93,-119,-118,224,-99,-120,224,-127,224,224,224,-104,224,224,224,224,224,224,-105,224,224,224,224,224,-101,-122,-96,-121,-123,224,-100,-85,-102,224,-86,]),'FLOATNUMBER':([111,138,146,151,153,158,166,167,195,197,210,211,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,244,249,295,297,298,303,307,322,327,334,347,348,349,351,353,354,356,],[139,139,139,139,-88,139,139,-71,-70,139,139,139,139,139,139,139,-77,139,139,139,139,139,139,139,139,139,139,139,139,-87,139,139,139,139,-78,-83,-89,139,-80,-90,-91,-81,-79,-82,-84,]),'VOID':([0,1,4,41,50,56,67,88,104,110,123,124,131,167,168,169,174,175,187,190,195,234,236,237,239,245,287,292,293,310,312,315,316,342,],[2,2,-61,-56,-6,-7,-21,-55,2,-9,-16,2,2,-71,-25,-23,-24,-22,-17,-13,-70,-19,2,-18,-20,-15,-29,-12,-11,-8,-10,-30,-14,-28,]),'GLOBAL':([0,1,4,41,50,56,67,88,110,123,167,168,169,174,175,187,190,195,234,236,237,239,245,292,293,310,312,316,],[3,3,-61,-56,-6,-7,-21,-55,-9,-16,-71,-25,-23,-24,-22,-17,-13,-70,-19,3,-18,-20,-15,-12,-11,-8,-10,-14,]),'NUMBER':([95,111,114,138,146,151,153,158,166,167,195,197,210,211,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,244,249,295,297,298,303,307,322,327,334,347,348,349,351,353,354,356,],[118,140,171,140,140,140,-88,140,140,-71,-70,140,140,140,140,140,140,140,-77,140,140,140,140,140,140,140,140,140,140,140,140,-87,140,140,140,140,-78,-83,-89,140,-80,-90,-91,-81,-79,-82,-84,]),'NE':([4,17,19,55,139,140,143,148,152,155,157,160,161,162,163,194,196,201,206,209,231,251,253,256,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,291,296,300,306,308,320,321,333,335,338,344,352,],[-61,-42,-41,-40,-125,-124,-103,-95,-92,-123,-94,-98,-128,219,-126,219,-97,219,-93,-119,-118,219,-99,-120,219,-127,219,-117,-109,-104,-111,-113,-107,-108,-110,-106,-105,-116,-112,219,219,219,-101,-122,-96,-121,-123,219,-100,-85,-102,219,-86,]),'GT':([4,17,19,55,139,140,143,148,152,155,157,160,161,162,163,194,196,201,206,209,231,251,253,256,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,291,296,300,306,308,320,321,333,335,338,344,352,],[-61,-42,-41,-40,-125,-124,-103,-95,-92,-123,-94,-98,-128,215,-126,215,-97,215,-93,-119,-118,215,-99,-120,215,-127,215,-117,-109,-104,-111,215,-107,-108,-110,-106,-105,-116,215,215,215,215,-101,-122,-96,-121,-123,215,-100,-85,-102,215,-86,]),'NEW':([111,138,146,151,153,158,166,167,195,197,210,211,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,244,249,295,297,298,303,307,322,327,334,347,348,349,351,353,354,356,],[142,142,142,142,-88,142,142,-71,-70,142,142,142,142,142,142,142,-77,142,142,142,142,142,142,142,142,142,142,142,142,-87,142,142,142,142,-78,-83,-89,142,-80,-90,-91,-81,-79,-82,-84,]),'RIGHTSHIFT':([4,17,19,55,139,140,143,148,152,155,157,160,161,162,163,194,196,201,206,209,231,251,253,256,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,291,296,300,306,308,320,321,333,335,338,344,352,],[-61,-42,-41,-40,-125,-124,-103,-95,-92,-123,-94,-98,-128,225,-126,225,-97,225,-93,-119,-118,225,-99,-120,225,-127,225,-117,225,-104,225,225,-107,225,225,-106,-105,-116,225,225,225,225,-101,-122,-96,-121,-123,225,-100,-85,-102,225,-86,]),'DOT':([4,17,19,55,139,140,143,148,152,155,157,160,161,163,196,206,253,256,264,296,300,306,308,320,333,335,338,352,],[-61,-42,-41,-40,-125,-124,198,-95,-92,-123,-94,-98,-128,-126,-97,-93,-99,-120,-127,-101,-122,-96,-121,-123,-100,-85,-102,-86,]),'LEFTSHIFT':([4,17,19,55,139,140,143,148,152,155,157,160,161,162,163,194,196,201,206,209,231,251,253,256,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,291,296,300,306,308,320,321,333,335,338,344,352,],[-61,-42,-41,-40,-125,-124,-103,-95,-92,-123,-94,-98,-128,214,-126,214,-97,214,-93,-119,-118,214,-99,-120,214,-127,214,-117,214,-104,214,214,-107,214,214,-106,-105,-116,214,214,214,214,-101,-122,-96,-121,-123,214,-100,-85,-102,214,-86,]),'LE':([4,17,19,55,139,140,143,148,152,155,157,160,161,162,163,194,196,201,206,209,231,251,253,256,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,291,296,300,306,308,320,321,333,335,338,344,352,],[-61,-42,-41,-40,-125,-124,-103,-95,-92,-123,-94,-98,-128,222,-126,222,-97,222,-93,-119,-118,222,-99,-120,222,-127,222,-117,-109,-104,-111,222,-107,-108,-110,-106,-105,-116,222,222,222,222,-101,-122,-96,-121,-123,222,-100,-85,-102,222,-86,]),'SEMI':([4,17,19,29,30,36,46,49,55,62,73,74,75,92,97,100,113,116,117,118,119,120,139,140,143,148,152,155,157,160,161,162,163,176,188,194,196,206,209,231,233,242,247,253,256,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,285,291,296,299,300,306,308,311,314,331,333,335,338,339,346,352,355,],[-61,-42,-41,-2,50,56,67,-63,-40,85,-69,-62,-65,-2,-2,123,169,-67,-66,-68,-64,175,-125,-124,-103,-95,-92,-123,-94,-98,-128,217,-126,-2,-2,249,-97,-93,-119,-118,282,287,293,-99,-120,-127,-114,-117,-109,-104,-111,-113,-107,-108,-110,-106,-105,-116,-112,307,-115,-2,315,-101,322,-122,-96,-121,329,-2,342,-100,-85,-102,347,354,-86,356,]),'STATIC_CAST':([111,138,146,151,153,158,166,167,195,197,210,211,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,244,249,295,297,298,303,307,322,327,334,347,348,349,351,353,354,356,],[144,144,144,144,-88,144,144,-71,-70,144,144,144,144,144,144,144,-77,144,144,144,144,144,144,144,144,144,144,144,144,-87,144,144,144,144,-78,-83,-89,144,-80,-90,-91,-81,-79,-82,-84,]),')':([4,17,19,40,41,45,47,49,51,52,53,54,55,57,58,60,66,68,69,71,73,74,75,76,77,78,79,80,81,84,88,91,93,105,112,115,116,117,118,119,134,135,136,139,140,143,148,152,155,157,160,161,163,170,171,172,186,191,192,196,201,206,209,211,231,232,241,243,250,251,253,255,256,257,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,280,288,289,290,295,296,297,300,303,306,308,313,317,318,319,320,321,323,324,325,326,330,332,333,335,336,337,338,344,350,352,],[-61,-42,-41,-2,-56,-2,-2,-63,-2,-2,-2,-2,-40,-2,-2,83,90,-47,92,-48,-69,-62,-65,97,98,99,100,101,102,-2,-55,-2,-49,133,-46,-50,-67,-66,-68,-64,-2,-128,-2,-125,-124,-103,-95,-92,-123,-94,-98,-128,-126,-54,-52,-53,-2,246,247,-97,256,-93,-119,-2,-118,-51,286,-2,-76,-75,-99,299,-120,300,305,306,-127,-114,-117,-109,-104,-111,-113,-107,-108,-110,-106,-105,-116,-112,-115,308,-39,-38,314,-2,-101,-2,-122,-2,-96,-121,-2,-2,-74,333,-123,335,-2,-2,338,339,-37,343,-100,-85,345,346,-102,352,355,-86,]),'(':([3,4,6,7,8,14,15,16,20,21,23,29,31,111,137,138,144,145,146,147,149,150,151,153,156,158,159,161,164,165,166,167,188,195,197,210,211,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,244,249,253,260,295,297,298,303,307,322,327,334,347,348,349,351,353,354,356,],[25,-61,26,27,28,32,33,34,37,38,39,47,51,146,193,146,199,200,146,202,203,204,146,-88,208,146,210,211,229,230,146,-71,243,-70,146,146,146,146,146,146,146,-77,146,146,146,146,146,146,146,146,146,146,146,146,-87,297,303,146,146,146,146,-78,-83,-89,146,-80,-90,-91,-81,-79,-82,-84,]),'IS_INVALID':([111,138,146,151,153,158,166,167,195,197,210,211,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,244,249,295,297,298,303,307,322,327,334,347,348,349,351,353,354,356,],[147,147,147,147,-88,147,147,-71,-70,147,147,147,147,147,147,147,-77,147,147,147,147,147,147,147,147,147,147,147,147,-87,147,147,147,147,-78,-83,-89,147,-80,-90,-91,-81,-79,-82,-84,]),',':([4,17,19,29,40,41,42,44,45,52,53,54,55,57,58,59,62,68,73,75,84,88,89,92,93,97,103,115,116,117,118,134,135,136,139,140,143,148,152,155,157,160,161,163,170,171,172,176,182,186,188,196,206,209,231,232,248,251,253,254,256,258,259,261,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,281,285,289,296,300,306,308,314,317,320,323,324,328,333,335,338,352,],[-61,-42,-41,48,48,-56,61,65,48,48,48,48,-40,48,48,82,87,91,-69,96,106,-55,109,48,-49,48,126,-50,-67,-66,-68,48,-128,48,-125,-124,-103,-95,-92,-123,-94,-98,-128,-126,-54,-52,-53,48,238,48,48,-97,-93,-119,-118,-51,294,295,-99,298,-120,301,302,304,-127,-114,-117,-109,-104,-111,-113,-107,-108,-110,-106,-105,-116,-112,-115,309,48,313,-101,-122,-96,-121,48,48,334,48,48,341,-100,-85,-102,-86,]),'OUT_PORT':([0,1,4,41,50,56,67,88,110,123,167,168,169,174,175,187,190,195,234,236,237,239,245,292,293,310,312,316,],[7,7,-61,-56,-6,-7,-21,-55,-9,-16,-71,-25,-23,-24,-22,-17,-13,-70,-19,7,-18,-20,-15,-12,-11,-8,-10,-14,]),'ENQUEUE':([111,151,153,167,195,217,249,307,322,327,347,348,349,351,353,354,356,],[149,149,-88,-71,-70,-77,-87,-78,-83,-89,-80,-90,-91,-81,-79,-82,-84,]),'LT':([4,17,19,55,139,140,143,148,152,155,157,160,161,162,163,194,196,201,206,209,231,251,253,256,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,291,296,300,306,308,320,321,333,335,338,344,352,],[-61,-42,-41,-40,-125,-124,-103,-95,-92,-123,-94,-98,-128,221,-126,221,-97,221,-93,-119,-118,221,-99,-120,221,-127,221,-117,-109,-104,-111,221,-107,-108,-110,-106,-105,-116,221,221,221,221,-101,-122,-96,-121,-123,221,-100,-85,-102,221,-86,]),'DOUBLE_COLON':([4,17,19,55,154,161,],[-61,35,-41,-40,207,-41,]),'PLUS':([4,17,19,55,139,140,143,148,152,155,157,160,161,162,163,194,196,201,206,209,231,251,253,256,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,291,296,300,306,308,320,321,333,335,338,344,352,],[-61,-42,-41,-40,-125,-124,-103,-95,-92,-123,-94,-98,-128,223,-126,223,-97,223,-93,-119,-118,223,-99,-120,223,-127,223,223,223,-104,223,223,-107,223,223,-106,-105,223,223,223,223,223,-101,-122,-96,-121,-123,223,-100,-85,-102,223,-86,]),'ACTION':([0,1,4,41,50,56,67,88,110,123,167,168,169,174,175,187,190,195,234,236,237,239,245,292,293,310,312,316,],[8,8,-61,-56,-6,-7,-21,-55,-9,-16,-71,-25,-23,-24,-22,-17,-13,-70,-19,8,-18,-20,-15,-12,-11,-8,-10,-14,]),':':([4,99,161,284,],[-61,122,212,212,]),'=':([4,72,93,115,134,],[-61,95,114,173,95,]),'ASSIGN':([4,17,19,55,139,140,143,148,152,155,157,160,161,162,163,188,196,206,209,231,253,256,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,296,300,306,308,333,335,338,352,],[-61,-42,-41,-40,-125,-124,-103,-95,-92,-123,-94,-98,-128,227,-126,244,-97,-93,-119,-118,-99,-120,-127,-114,-117,-109,-104,-111,-113,-107,-108,-110,-106,-105,-116,-112,-115,-101,-122,-96,-121,-100,-85,-102,-86,]),'$end':([0,1,4,5,10,11,22,24,41,50,56,67,88,110,123,167,168,169,174,175,187,190,195,234,237,239,245,292,293,310,312,316,],[-2,-2,-61,0,-5,-3,-1,-4,-56,-6,-7,-21,-55,-9,-16,-71,-25,-23,-24,-22,-17,-13,-70,-19,-18,-20,-15,-12,-11,-8,-10,-14,]),'IDENT':([0,1,2,4,9,13,17,19,25,26,27,28,32,33,34,35,37,38,39,41,43,47,48,50,51,55,56,61,62,65,67,70,82,85,87,88,91,94,95,96,104,106,109,110,111,121,122,123,124,125,126,128,129,130,131,133,138,142,146,151,153,154,158,161,166,167,168,169,174,175,178,184,187,190,193,195,197,198,199,200,202,203,204,207,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,234,236,237,238,239,243,244,245,246,249,282,287,292,293,294,295,297,298,301,302,303,304,307,310,312,313,315,316,322,327,329,334,342,347,348,349,351,353,354,356,],[4,4,-43,-61,4,4,-42,-41,4,4,4,4,4,4,4,4,4,4,4,-56,4,4,4,-6,4,-40,-7,4,4,4,-21,4,4,4,4,-55,4,4,4,4,4,4,4,-9,4,4,4,-16,4,4,4,4,-45,-44,4,4,4,4,4,4,-88,4,4,-41,4,-71,-25,-23,-24,-22,4,4,-17,4,4,-70,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,-77,4,4,4,4,4,4,4,4,4,4,4,4,4,-19,4,-18,4,-20,4,4,-15,4,-87,-33,-29,4,-11,4,4,4,4,4,4,4,4,-78,-8,-10,4,-30,-14,-83,-89,-36,4,-28,-80,-90,-91,-81,-79,-82,-84,]),'PROTOCOL':([0,1,4,41,50,56,67,88,110,123,167,168,169,174,175,187,190,195,234,236,237,239,245,292,293,310,312,316,],[12,12,-61,-56,-6,-7,-21,-55,-9,-16,-71,-25,-23,-24,-22,-17,-13,-70,-19,12,-18,-20,-15,-12,-11,-8,-10,-14,]),'STRING':([12,18,48,95,96,106,111,114,138,146,151,153,158,166,167,173,195,197,210,211,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,244,249,295,297,298,303,307,309,322,327,334,341,347,348,349,351,353,354,356,],[30,36,73,117,73,73,155,170,155,155,155,-88,155,155,-71,232,-70,155,155,155,155,155,155,155,-77,155,155,155,155,155,155,155,155,155,155,155,155,-87,155,155,320,155,-78,328,-83,-89,155,350,-80,-90,-91,-81,-79,-82,-84,]),'STALL_AND_WAIT':([111,151,153,167,195,217,249,307,322,327,347,348,349,351,353,354,356,],[156,156,-88,-71,-70,-77,-87,-78,-83,-89,-80,-90,-91,-81,-79,-82,-84,]),'OOD':([111,138,146,151,153,158,166,167,195,197,210,211,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,244,249,295,297,298,303,307,322,327,334,347,348,349,351,353,354,356,],[160,160,160,160,-88,160,160,-71,-70,160,160,160,160,160,160,160,-77,160,160,160,160,160,160,160,160,160,160,160,160,-87,160,160,160,160,-78,-83,-89,160,-80,-90,-91,-81,-79,-82,-84,]),'ENUM':([0,1,4,41,50,56,67,88,110,123,167,168,169,174,175,187,190,195,234,236,237,239,245,292,293,310,312,316,],[14,14,-61,-56,-6,-7,-21,-55,-9,-16,-71,-25,-23,-24,-22,-17,-13,-70,-19,14,-18,-20,-15,-12,-11,-8,-10,-14,]),'ELSE':([167,195,327,],[-71,-70,340,]),'MACHINE':([0,1,4,41,50,56,67,88,110,123,167,168,169,174,175,187,190,195,234,236,237,239,245,292,293,310,312,316,],[15,15,-61,-56,-6,-7,-21,-55,-9,-16,-71,-25,-23,-24,-22,-17,-13,-70,-19,15,-18,-20,-15,-12,-11,-8,-10,-14,]),'GE':([4,17,19,55,139,140,143,148,152,155,157,160,161,162,163,194,196,201,206,209,231,251,253,256,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,291,296,300,306,308,320,321,333,335,338,344,352,],[-61,-42,-41,-40,-125,-124,-103,-95,-92,-123,-94,-98,-128,218,-126,218,-97,218,-93,-119,-118,218,-99,-120,218,-127,218,-117,-109,-104,-111,218,-107,-108,-110,-106,-105,-116,218,218,218,218,-101,-122,-96,-121,-123,218,-100,-85,-102,218,-86,]),'EXTERN_TYPE':([0,1,4,41,50,56,67,88,110,123,167,168,169,174,175,187,190,195,234,236,237,239,245,292,293,310,312,316,],[16,16,-61,-56,-6,-7,-21,-55,-9,-16,-71,-25,-23,-24,-22,-17,-13,-70,-19,16,-18,-20,-15,-12,-11,-8,-10,-14,]),'[':([4,17,19,55,139,140,143,148,152,155,157,160,161,163,196,206,253,256,264,296,300,306,308,320,333,335,338,352,],[-61,-42,-41,-40,-125,-124,197,-95,-92,-123,-94,-98,-128,-126,-97,-93,-99,-120,-127,-101,-122,-96,-121,-123,-100,-85,-102,-86,]),'INCLUDE':([0,1,4,41,50,56,67,88,110,123,167,168,169,174,175,187,190,195,234,236,237,239,245,292,293,310,312,316,],[18,18,-61,-56,-6,-7,-21,-55,-9,-16,-71,-25,-23,-24,-22,-17,-13,-70,-19,18,-18,-20,-15,-12,-11,-8,-10,-14,]),']':([4,17,19,55,139,140,143,148,152,155,157,160,161,163,196,197,206,209,231,250,251,252,253,256,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,295,296,300,306,308,318,333,335,338,352,],[-61,-42,-41,-40,-125,-124,-103,-95,-92,-123,-94,-98,-128,-126,-97,-2,-93,-119,-118,-76,-75,296,-99,-120,-127,-114,-117,-109,-104,-111,-113,-107,-108,-110,-106,-105,-116,-112,-115,-2,-101,-122,-96,-121,-74,-100,-85,-102,-86,]),'IF':([111,151,153,167,195,217,249,307,322,327,340,347,348,349,351,353,354,356,],[159,159,-88,-71,-70,-77,-87,-78,-83,-89,159,-80,-90,-91,-81,-79,-82,-84,]),'AND':([4,17,19,55,139,140,143,148,152,155,157,160,161,162,163,194,196,201,206,209,231,251,253,256,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,291,296,300,306,308,320,321,333,335,338,344,352,],[-61,-42,-41,-40,-125,-124,-103,-95,-92,-123,-94,-98,-128,213,-126,213,-97,213,-93,-119,-118,213,-99,-120,213,-127,-114,-117,-109,-104,-111,-113,-107,-108,-110,-106,-105,-116,-112,213,-115,213,-101,-122,-96,-121,-123,213,-100,-85,-102,213,-86,]),'DASH':([4,17,19,55,111,138,139,140,143,146,148,151,152,153,155,157,158,160,161,162,163,166,167,194,195,196,197,201,206,209,210,211,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,231,244,249,251,253,256,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,291,295,296,297,298,300,303,306,307,308,320,321,322,327,333,334,335,338,344,347,348,349,351,352,353,354,356,],[-61,-42,-41,-40,158,158,-125,-124,-103,158,-95,158,-92,-88,-123,-94,158,-98,-128,220,-126,158,-71,220,-70,-97,158,220,-93,-119,158,158,158,158,158,158,-77,158,158,158,158,158,158,158,158,158,158,158,-118,158,-87,220,-99,-120,220,-127,220,220,220,-104,220,220,-107,220,220,-106,-105,220,220,220,220,220,158,-101,158,158,-122,158,-96,-78,-121,-123,220,-83,-89,-100,158,-85,-102,220,-80,-90,-91,-81,-86,-79,-82,-84,]),'RETURN':([111,151,153,167,195,217,249,307,322,327,347,348,349,351,353,354,356,],[138,138,-88,-71,-70,-77,-87,-78,-83,-89,-80,-90,-91,-81,-79,-82,-84,]),'EQ':([4,17,19,55,139,140,143,148,152,155,157,160,161,162,163,194,196,201,206,209,231,251,253,256,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,291,296,300,306,308,320,321,333,335,338,344,352,],[-61,-42,-41,-40,-125,-124,-103,-95,-92,-123,-94,-98,-128,226,-126,226,-97,226,-93,-119,-118,226,-99,-120,226,-127,226,-117,-109,-104,-111,-113,-107,-108,-110,-106,-105,-116,-112,226,226,226,-101,-122,-96,-121,-123,226,-100,-85,-102,226,-86,]),'STRUCT':([0,1,4,41,50,56,67,88,110,123,167,168,169,174,175,187,190,195,234,236,237,239,245,292,293,310,312,316,],[20,20,-61,-56,-6,-7,-21,-55,-9,-16,-71,-25,-23,-24,-22,-17,-13,-70,-19,20,-18,-20,-15,-12,-11,-8,-10,-14,]),'COPY_HEAD':([111,151,153,167,195,217,249,307,322,327,347,348,349,351,353,354,356,],[150,150,-88,-71,-70,-77,-87,-78,-83,-89,-80,-90,-91,-81,-79,-82,-84,]),'STATE_DECL':([0,1,4,41,50,56,67,88,110,123,167,168,169,174,175,187,190,195,234,236,237,239,245,292,293,310,312,316,],[21,21,-61,-56,-6,-7,-21,-55,-9,-16,-71,-25,-23,-24,-22,-17,-13,-70,-19,21,-18,-20,-15,-12,-11,-8,-10,-14,]),'CHECK_ALLOCATE':([111,151,153,167,195,217,249,307,322,327,347,348,349,351,353,354,356,],[145,145,-88,-71,-70,-77,-87,-78,-83,-89,-80,-90,-91,-81,-79,-82,-84,]),'LIT_BOOL':([111,114,138,146,151,153,158,166,167,195,197,210,211,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,244,249,295,297,298,303,307,322,327,334,347,348,349,351,353,354,356,],[163,172,163,163,163,-88,163,163,-71,-70,163,163,163,163,163,163,163,-77,163,163,163,163,163,163,163,163,163,163,163,163,-87,163,163,163,163,-78,-83,-89,163,-80,-90,-91,-81,-79,-82,-84,]),'IS_VALID':([111,138,146,151,153,158,166,167,195,197,210,211,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,244,249,295,297,298,303,307,322,327,334,347,348,349,351,353,354,356,],[164,164,164,164,-88,164,164,-71,-70,164,164,164,164,164,164,164,-77,164,164,164,164,164,164,164,164,164,164,164,164,-87,164,164,164,164,-78,-83,-89,164,-80,-90,-91,-81,-79,-82,-84,]),'CHECK_STOP_SLOTS':([111,151,153,167,195,217,249,307,322,327,347,348,349,351,353,354,356,],[165,165,-88,-71,-70,-77,-87,-78,-83,-89,-80,-90,-91,-81,-79,-82,-84,]),'NOT':([111,138,146,151,153,158,166,167,195,197,210,211,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,244,249,295,297,298,303,307,322,327,334,347,348,349,351,353,354,356,],[166,166,166,166,-88,166,166,-71,-70,166,166,166,166,166,166,166,-77,166,166,166,166,166,166,166,166,166,166,166,166,-87,166,166,166,166,-78,-83,-89,166,-80,-90,-91,-81,-79,-82,-84,]),'{':([4,26,41,49,61,68,71,73,74,75,83,88,90,91,92,93,97,98,101,102,112,113,115,116,117,118,119,120,122,133,170,171,172,180,190,232,246,286,292,305,340,343,345,],[-61,43,-56,-63,43,-47,-48,-69,-62,-65,104,-55,111,-2,-2,-49,-2,121,124,125,-46,111,-50,-67,-66,-68,-64,111,-2,43,-54,-52,-53,236,43,-51,43,111,43,111,111,111,111,]),'}':([1,4,10,11,24,41,43,50,56,62,63,64,67,85,86,87,88,104,107,108,110,111,121,123,124,125,127,131,132,141,151,153,167,168,169,174,175,177,178,179,181,183,184,185,187,189,190,195,205,217,234,235,236,237,239,240,245,249,282,283,287,292,293,307,310,312,315,316,322,327,329,342,347,348,349,351,353,354,356,],[-2,-61,-5,-3,-4,-56,-2,-6,-7,-2,88,-60,-21,-2,-59,-2,-55,-2,-57,-58,-9,167,-2,-16,-2,-2,187,-2,-27,195,-73,-88,-71,-25,-23,-24,-22,234,-2,-32,237,239,-2,-35,-17,-26,-13,-70,-72,-77,-19,-31,-2,-18,-20,-34,-15,-87,-33,310,-29,-12,-11,-78,-8,-10,-30,-14,-83,-89,-36,-28,-80,-90,-91,-81,-79,-82,-84,]),'OR':([4,17,19,55,139,140,143,148,152,155,157,160,161,162,163,194,196,201,206,209,231,251,253,256,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,291,296,300,306,308,320,321,333,335,338,344,352,],[-61,-42,-41,-40,-125,-124,-103,-95,-92,-123,-94,-98,-128,228,-126,228,-97,228,-93,-119,-118,228,-99,-120,228,-127,-114,-117,-109,-104,-111,-113,-107,-108,-110,-106,-105,-116,-112,228,-115,228,-101,-122,-96,-121,-123,228,-100,-85,-102,228,-86,]),'IN_PORT':([0,1,4,41,50,56,67,88,110,123,167,168,169,174,175,187,190,195,234,236,237,239,245,292,293,310,312,316,],[23,23,-61,-56,-6,-7,-21,-55,-9,-16,-71,-25,-23,-24,-22,-17,-13,-70,-19,23,-18,-20,-15,-12,-11,-8,-10,-14,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'decl':([0,1,236,],[1,1,1,]),'statements':([90,113,120,286,305,340,343,345,],[110,168,174,312,327,348,351,353,]),'type_enums':([121,178,],[177,235,]),'pairsx':([48,96,106,],[74,119,74,]),'type_members':([104,124,131,],[127,181,189,]),'statements_inner':([111,151,],[141,205,]),'enumeration':([111,138,146,151,158,166,197,210,211,213,214,215,216,218,219,220,221,222,223,224,225,226,227,228,238,244,295,297,298,303,334,],[148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,285,148,148,148,148,148,148,]),'file':([0,],[5,]),'type_state':([125,184,],[184,184,]),'type_member':([104,124,131,],[131,131,131,]),'type_or_void':([104,124,131,],[128,128,128,]),'param':([47,51,91,122,],[68,68,68,68,]),'aexpr':([111,138,146,151,158,166,197,210,211,213,214,215,216,218,219,220,221,222,223,224,225,226,227,228,244,295,297,298,303,334,],[143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,]),'literal':([111,138,146,151,158,166,197,210,211,213,214,215,216,218,219,220,221,222,223,224,225,226,227,228,244,295,297,298,303,334,],[157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,]),'params':([47,51,91,122,],[69,76,112,180,]),'statement':([111,151,],[151,151,]),'var':([109,111,126,138,146,151,158,166,193,197,200,202,203,204,208,210,211,213,214,215,216,218,219,220,221,222,223,224,225,226,227,228,229,230,244,295,297,298,302,303,304,334,],[136,152,186,152,152,152,152,152,248,152,255,257,258,259,261,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,280,281,152,152,152,152,324,152,326,152,]),'if_statement':([111,151,340,],[153,153,349,]),'type':([0,1,25,32,34,37,38,47,51,65,82,91,104,111,122,124,131,138,142,146,151,158,166,197,199,210,211,213,214,215,216,218,219,220,221,222,223,224,225,226,227,228,236,243,244,294,295,297,298,301,303,313,334,],[9,9,40,52,54,57,58,70,70,89,103,70,130,154,70,130,130,154,196,154,154,154,154,154,254,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,9,289,154,317,154,154,154,323,154,289,154,]),'empty':([0,1,29,40,43,45,47,51,52,53,54,57,58,62,84,85,87,91,92,97,104,121,122,124,125,131,134,136,176,178,184,186,188,197,211,236,243,285,295,297,303,313,314,317,323,324,],[10,10,49,49,64,49,71,71,49,49,49,49,49,64,49,64,64,71,49,49,132,179,71,132,185,132,49,49,49,179,185,49,49,250,250,10,288,49,250,250,250,288,49,49,49,49,]),'declsx':([0,1,236,],[11,24,11,]),'idents':([26,61,133,190,246,292,],[42,84,190,245,292,316,]),'void':([0,1,104,124,131,236,],[13,13,129,129,129,13,]),'identx':([43,62,85,87,],[63,86,107,108,]),'type_states':([125,184,],[183,240,]),'pair':([48,96,106,],[75,75,75,]),'type_enum':([121,178,],[178,178,]),'typestr':([0,1,25,32,34,37,38,47,51,65,82,91,104,111,122,124,131,138,142,146,151,158,166,197,199,210,211,213,214,215,216,218,219,220,221,222,223,224,225,226,227,228,236,243,244,294,295,297,298,301,303,313,334,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'types':([243,313,],[290,330,]),'pairs':([29,40,45,52,53,54,57,58,84,92,97,134,136,176,186,188,285,314,317,323,324,],[46,60,66,77,78,79,80,81,105,113,120,191,192,233,241,242,311,331,332,336,337,]),'ident':([0,1,9,13,25,26,27,28,32,33,34,35,37,38,39,43,47,48,51,61,62,65,70,82,85,87,91,94,95,96,104,106,109,111,121,122,124,125,126,128,131,133,138,142,146,151,154,158,166,178,184,190,193,197,198,199,200,202,203,204,207,208,210,211,212,213,214,215,216,218,219,220,221,222,223,224,225,226,227,228,229,230,236,238,243,244,246,292,294,295,297,298,301,302,303,304,313,334,],[19,19,29,31,19,41,44,45,19,53,19,55,19,19,59,62,19,72,19,41,62,19,93,19,62,62,19,115,116,72,19,134,135,161,176,19,19,182,135,188,19,41,161,19,161,161,206,161,161,176,182,41,135,161,253,19,135,135,135,135,260,135,161,161,264,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,135,135,19,284,19,161,41,41,19,161,161,161,19,135,161,135,19,161,]),'expr':([111,138,146,151,158,166,197,210,211,213,214,215,216,218,219,220,221,222,223,224,225,226,227,228,244,295,297,298,303,334,],[162,194,201,162,209,231,251,262,251,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,291,251,251,321,251,344,]),'exprs':([197,211,295,297,303,],[252,263,318,319,325,]),'decls':([0,236,],[22,283,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> file","S'",1,None,None,None),
  ('file -> decls','file',1,'p_file','/home/ys/gem5/src/mem/slicc/parser.py',215),
  ('empty -> <empty>','empty',0,'p_empty','/home/ys/gem5/src/mem/slicc/parser.py',219),
  ('decls -> declsx','decls',1,'p_decls','/home/ys/gem5/src/mem/slicc/parser.py',222),
  ('declsx -> decl declsx','declsx',2,'p_declsx__list','/home/ys/gem5/src/mem/slicc/parser.py',226),
  ('declsx -> empty','declsx',1,'p_declsx__none','/home/ys/gem5/src/mem/slicc/parser.py',236),
  ('decl -> PROTOCOL STRING SEMI','decl',3,'p_decl__protocol','/home/ys/gem5/src/mem/slicc/parser.py',240),
  ('decl -> INCLUDE STRING SEMI','decl',3,'p_decl__include','/home/ys/gem5/src/mem/slicc/parser.py',249),
  ('decl -> MACHINE ( ident pairs ) : params { decls }','decl',10,'p_decl__machine','/home/ys/gem5/src/mem/slicc/parser.py',258),
  ('decl -> ACTION ( ident pairs ) statements','decl',6,'p_decl__action','/home/ys/gem5/src/mem/slicc/parser.py',262),
  ('decl -> IN_PORT ( ident , type , var pairs ) statements','decl',10,'p_decl__in_port','/home/ys/gem5/src/mem/slicc/parser.py',266),
  ('decl -> OUT_PORT ( ident , type , var pairs ) SEMI','decl',10,'p_decl__out_port','/home/ys/gem5/src/mem/slicc/parser.py',270),
  ('decl -> TRANS ( idents , idents , ident pairs ) idents','decl',10,'p_decl__trans0','/home/ys/gem5/src/mem/slicc/parser.py',274),
  ('decl -> TRANS ( idents , idents pairs ) idents','decl',8,'p_decl__trans1','/home/ys/gem5/src/mem/slicc/parser.py',278),
  ('decl -> TRANS ( idents , idents , ident pairs ) idents idents','decl',11,'p_decl__trans2','/home/ys/gem5/src/mem/slicc/parser.py',282),
  ('decl -> TRANS ( idents , idents pairs ) idents idents','decl',9,'p_decl__trans3','/home/ys/gem5/src/mem/slicc/parser.py',286),
  ('decl -> EXTERN_TYPE ( type pairs ) SEMI','decl',6,'p_decl__extern0','/home/ys/gem5/src/mem/slicc/parser.py',290),
  ('decl -> GLOBAL ( type pairs ) { type_members }','decl',8,'p_decl__global','/home/ys/gem5/src/mem/slicc/parser.py',295),
  ('decl -> STRUCT ( type pairs ) { type_members }','decl',8,'p_decl__struct','/home/ys/gem5/src/mem/slicc/parser.py',300),
  ('decl -> ENUM ( type pairs ) { type_enums }','decl',8,'p_decl__enum','/home/ys/gem5/src/mem/slicc/parser.py',304),
  ('decl -> STATE_DECL ( type pairs ) { type_states }','decl',8,'p_decl__state_decl','/home/ys/gem5/src/mem/slicc/parser.py',309),
  ('decl -> type ident pairs SEMI','decl',4,'p_decl__object','/home/ys/gem5/src/mem/slicc/parser.py',315),
  ('decl -> void ident ( params ) pairs SEMI','decl',7,'p_decl__func_decl','/home/ys/gem5/src/mem/slicc/parser.py',319),
  ('decl -> type ident ( params ) pairs SEMI','decl',7,'p_decl__func_decl','/home/ys/gem5/src/mem/slicc/parser.py',320),
  ('decl -> void ident ( params ) pairs statements','decl',7,'p_decl__func_def','/home/ys/gem5/src/mem/slicc/parser.py',324),
  ('decl -> type ident ( params ) pairs statements','decl',7,'p_decl__func_def','/home/ys/gem5/src/mem/slicc/parser.py',325),
  ('type_members -> type_member type_members','type_members',2,'p_type_members__list','/home/ys/gem5/src/mem/slicc/parser.py',330),
  ('type_members -> empty','type_members',1,'p_type_members__empty','/home/ys/gem5/src/mem/slicc/parser.py',334),
  ('type_member -> type_or_void ident ( types ) pairs SEMI','type_member',7,'p_type_method__0','/home/ys/gem5/src/mem/slicc/parser.py',338),
  ('type_member -> type_or_void ident pairs SEMI','type_member',4,'p_type_member__1','/home/ys/gem5/src/mem/slicc/parser.py',342),
  ('type_member -> type_or_void ident ASSIGN expr SEMI','type_member',5,'p_type_member__2','/home/ys/gem5/src/mem/slicc/parser.py',346),
  ('type_enums -> type_enum type_enums','type_enums',2,'p_type_enums__list','/home/ys/gem5/src/mem/slicc/parser.py',352),
  ('type_enums -> empty','type_enums',1,'p_type_enums__empty','/home/ys/gem5/src/mem/slicc/parser.py',356),
  ('type_enum -> ident pairs SEMI','type_enum',3,'p_type_enum','/home/ys/gem5/src/mem/slicc/parser.py',360),
  ('type_states -> type_state type_states','type_states',2,'p_type_states__list','/home/ys/gem5/src/mem/slicc/parser.py',365),
  ('type_states -> empty','type_states',1,'p_type_states__empty','/home/ys/gem5/src/mem/slicc/parser.py',369),
  ('type_state -> ident , enumeration pairs SEMI','type_state',5,'p_type_state','/home/ys/gem5/src/mem/slicc/parser.py',373),
  ('types -> type , types','types',3,'p_types__multiple','/home/ys/gem5/src/mem/slicc/parser.py',378),
  ('types -> type','types',1,'p_types__one','/home/ys/gem5/src/mem/slicc/parser.py',382),
  ('types -> empty','types',1,'p_types__empty','/home/ys/gem5/src/mem/slicc/parser.py',386),
  ('typestr -> typestr DOUBLE_COLON ident','typestr',3,'p_typestr__multi','/home/ys/gem5/src/mem/slicc/parser.py',390),
  ('typestr -> ident','typestr',1,'p_typestr__single','/home/ys/gem5/src/mem/slicc/parser.py',394),
  ('type -> typestr','type',1,'p_type__one','/home/ys/gem5/src/mem/slicc/parser.py',398),
  ('void -> VOID','void',1,'p_void','/home/ys/gem5/src/mem/slicc/parser.py',402),
  ('type_or_void -> type','type_or_void',1,'p_type_or_void','/home/ys/gem5/src/mem/slicc/parser.py',406),
  ('type_or_void -> void','type_or_void',1,'p_type_or_void','/home/ys/gem5/src/mem/slicc/parser.py',407),
  ('params -> param , params','params',3,'p_params__many','/home/ys/gem5/src/mem/slicc/parser.py',412),
  ('params -> param','params',1,'p_params__one','/home/ys/gem5/src/mem/slicc/parser.py',416),
  ('params -> empty','params',1,'p_params__none','/home/ys/gem5/src/mem/slicc/parser.py',420),
  ('param -> type ident','param',2,'p_param','/home/ys/gem5/src/mem/slicc/parser.py',424),
  ('param -> type STAR ident','param',3,'p_param__pointer','/home/ys/gem5/src/mem/slicc/parser.py',428),
  ('param -> type STAR ident = STRING','param',5,'p_param__pointer_default','/home/ys/gem5/src/mem/slicc/parser.py',432),
  ('param -> type ident = NUMBER','param',4,'p_param__default_number','/home/ys/gem5/src/mem/slicc/parser.py',436),
  ('param -> type ident = LIT_BOOL','param',4,'p_param__default_bool','/home/ys/gem5/src/mem/slicc/parser.py',440),
  ('param -> type ident = STRING','param',4,'p_param__default_string','/home/ys/gem5/src/mem/slicc/parser.py',444),
  ('idents -> { identx }','idents',3,'p_idents__braced','/home/ys/gem5/src/mem/slicc/parser.py',449),
  ('idents -> ident','idents',1,'p_idents__bare','/home/ys/gem5/src/mem/slicc/parser.py',453),
  ('identx -> ident SEMI identx','identx',3,'p_identx__multiple_1','/home/ys/gem5/src/mem/slicc/parser.py',457),
  ('identx -> ident , identx','identx',3,'p_identx__multiple_1','/home/ys/gem5/src/mem/slicc/parser.py',458),
  ('identx -> ident identx','identx',2,'p_identx__multiple_2','/home/ys/gem5/src/mem/slicc/parser.py',462),
  ('identx -> empty','identx',1,'p_identx__single','/home/ys/gem5/src/mem/slicc/parser.py',466),
  ('ident -> IDENT','ident',1,'p_ident','/home/ys/gem5/src/mem/slicc/parser.py',470),
  ('pairs -> , pairsx','pairs',2,'p_pairs__list','/home/ys/gem5/src/mem/slicc/parser.py',475),
  ('pairs -> empty','pairs',1,'p_pairs__empty','/home/ys/gem5/src/mem/slicc/parser.py',479),
  ('pairsx -> pair , pairsx','pairsx',3,'p_pairsx__many','/home/ys/gem5/src/mem/slicc/parser.py',483),
  ('pairsx -> pair','pairsx',1,'p_pairsx__one','/home/ys/gem5/src/mem/slicc/parser.py',488),
  ('pair -> ident = STRING','pair',3,'p_pair__assign','/home/ys/gem5/src/mem/slicc/parser.py',493),
  ('pair -> ident = ident','pair',3,'p_pair__assign','/home/ys/gem5/src/mem/slicc/parser.py',494),
  ('pair -> ident = NUMBER','pair',3,'p_pair__assign','/home/ys/gem5/src/mem/slicc/parser.py',495),
  ('pair -> STRING','pair',1,'p_pair__literal','/home/ys/gem5/src/mem/slicc/parser.py',499),
  ('statements -> { statements_inner }','statements',3,'p_statements__inner','/home/ys/gem5/src/mem/slicc/parser.py',504),
  ('statements -> { }','statements',2,'p_statements__none','/home/ys/gem5/src/mem/slicc/parser.py',508),
  ('statements_inner -> statement statements_inner','statements_inner',2,'p_statements_inner__many','/home/ys/gem5/src/mem/slicc/parser.py',512),
  ('statements_inner -> statement','statements_inner',1,'p_statements_inner__one','/home/ys/gem5/src/mem/slicc/parser.py',516),
  ('exprs -> expr , exprs','exprs',3,'p_exprs__multiple','/home/ys/gem5/src/mem/slicc/parser.py',520),
  ('exprs -> expr','exprs',1,'p_exprs__one','/home/ys/gem5/src/mem/slicc/parser.py',524),
  ('exprs -> empty','exprs',1,'p_exprs__empty','/home/ys/gem5/src/mem/slicc/parser.py',528),
  ('statement -> expr SEMI','statement',2,'p_statement__expression','/home/ys/gem5/src/mem/slicc/parser.py',532),
  ('statement -> expr ASSIGN expr SEMI','statement',4,'p_statement__assign','/home/ys/gem5/src/mem/slicc/parser.py',536),
  ('statement -> ENQUEUE ( var , type pairs ) statements','statement',8,'p_statement__enqueue','/home/ys/gem5/src/mem/slicc/parser.py',540),
  ('statement -> STALL_AND_WAIT ( var , var ) SEMI','statement',7,'p_statement__stall_and_wait','/home/ys/gem5/src/mem/slicc/parser.py',544),
  ('statement -> PEEK ( var , type pairs ) statements','statement',8,'p_statement__peek','/home/ys/gem5/src/mem/slicc/parser.py',548),
  ('statement -> COPY_HEAD ( var , var pairs ) SEMI','statement',8,'p_statement__copy_head','/home/ys/gem5/src/mem/slicc/parser.py',552),
  ('statement -> CHECK_ALLOCATE ( var ) SEMI','statement',5,'p_statement__check_allocate','/home/ys/gem5/src/mem/slicc/parser.py',556),
  ('statement -> CHECK_STOP_SLOTS ( var , STRING , STRING ) SEMI','statement',9,'p_statement__check_stop','/home/ys/gem5/src/mem/slicc/parser.py',560),
  ('aexpr -> STATIC_CAST ( type , expr )','aexpr',6,'p_statement__static_cast','/home/ys/gem5/src/mem/slicc/parser.py',564),
  ('aexpr -> STATIC_CAST ( type , STRING , expr )','aexpr',8,'p_statement__static_cast_ptr','/home/ys/gem5/src/mem/slicc/parser.py',568),
  ('statement -> RETURN expr SEMI','statement',3,'p_statement__return','/home/ys/gem5/src/mem/slicc/parser.py',572),
  ('statement -> if_statement','statement',1,'p_statement__if','/home/ys/gem5/src/mem/slicc/parser.py',576),
  ('if_statement -> IF ( expr ) statements','if_statement',5,'p_if_statement__if','/home/ys/gem5/src/mem/slicc/parser.py',580),
  ('if_statement -> IF ( expr ) statements ELSE statements','if_statement',7,'p_if_statement__if_else','/home/ys/gem5/src/mem/slicc/parser.py',584),
  ('if_statement -> IF ( expr ) statements ELSE if_statement','if_statement',7,'p_statement__if_else_if','/home/ys/gem5/src/mem/slicc/parser.py',588),
  ('aexpr -> var','aexpr',1,'p_expr__var','/home/ys/gem5/src/mem/slicc/parser.py',593),
  ('aexpr -> type ident','aexpr',2,'p_expr__localvar','/home/ys/gem5/src/mem/slicc/parser.py',597),
  ('aexpr -> literal','aexpr',1,'p_expr__literal','/home/ys/gem5/src/mem/slicc/parser.py',601),
  ('aexpr -> enumeration','aexpr',1,'p_expr__enumeration','/home/ys/gem5/src/mem/slicc/parser.py',605),
  ('aexpr -> ident ( exprs )','aexpr',4,'p_expr__func_call','/home/ys/gem5/src/mem/slicc/parser.py',609),
  ('aexpr -> NEW type','aexpr',2,'p_expr__new','/home/ys/gem5/src/mem/slicc/parser.py',613),
  ('aexpr -> OOD','aexpr',1,'p_expr__null','/home/ys/gem5/src/mem/slicc/parser.py',617),
  ('aexpr -> aexpr DOT ident','aexpr',3,'p_expr__member','/home/ys/gem5/src/mem/slicc/parser.py',621),
  ('aexpr -> aexpr DOT ident ( exprs )','aexpr',6,'p_expr__member_method_call','/home/ys/gem5/src/mem/slicc/parser.py',625),
  ('aexpr -> aexpr [ exprs ]','aexpr',4,'p_expr__member_method_call_lookup','/home/ys/gem5/src/mem/slicc/parser.py',629),
  ('aexpr -> type DOUBLE_COLON ident ( exprs )','aexpr',6,'p_expr__class_method_call','/home/ys/gem5/src/mem/slicc/parser.py',633),
  ('expr -> aexpr','expr',1,'p_expr__aexpr','/home/ys/gem5/src/mem/slicc/parser.py',637),
  ('expr -> expr STAR expr','expr',3,'p_expr__binary_op','/home/ys/gem5/src/mem/slicc/parser.py',641),
  ('expr -> expr SLASH expr','expr',3,'p_expr__binary_op','/home/ys/gem5/src/mem/slicc/parser.py',642),
  ('expr -> expr PLUS expr','expr',3,'p_expr__binary_op','/home/ys/gem5/src/mem/slicc/parser.py',643),
  ('expr -> expr DASH expr','expr',3,'p_expr__binary_op','/home/ys/gem5/src/mem/slicc/parser.py',644),
  ('expr -> expr LT expr','expr',3,'p_expr__binary_op','/home/ys/gem5/src/mem/slicc/parser.py',645),
  ('expr -> expr GT expr','expr',3,'p_expr__binary_op','/home/ys/gem5/src/mem/slicc/parser.py',646),
  ('expr -> expr LE expr','expr',3,'p_expr__binary_op','/home/ys/gem5/src/mem/slicc/parser.py',647),
  ('expr -> expr GE expr','expr',3,'p_expr__binary_op','/home/ys/gem5/src/mem/slicc/parser.py',648),
  ('expr -> expr EQ expr','expr',3,'p_expr__binary_op','/home/ys/gem5/src/mem/slicc/parser.py',649),
  ('expr -> expr NE expr','expr',3,'p_expr__binary_op','/home/ys/gem5/src/mem/slicc/parser.py',650),
  ('expr -> expr AND expr','expr',3,'p_expr__binary_op','/home/ys/gem5/src/mem/slicc/parser.py',651),
  ('expr -> expr OR expr','expr',3,'p_expr__binary_op','/home/ys/gem5/src/mem/slicc/parser.py',652),
  ('expr -> expr RIGHTSHIFT expr','expr',3,'p_expr__binary_op','/home/ys/gem5/src/mem/slicc/parser.py',653),
  ('expr -> expr LEFTSHIFT expr','expr',3,'p_expr__binary_op','/home/ys/gem5/src/mem/slicc/parser.py',654),
  ('expr -> NOT expr','expr',2,'p_expr__unary_op','/home/ys/gem5/src/mem/slicc/parser.py',659),
  ('expr -> DASH expr','expr',2,'p_expr__unary_op','/home/ys/gem5/src/mem/slicc/parser.py',660),
  ('aexpr -> ( expr )','aexpr',3,'p_expr__parens','/home/ys/gem5/src/mem/slicc/parser.py',664),
  ('aexpr -> IS_VALID ( var )','aexpr',4,'p_expr__is_valid_ptr','/home/ys/gem5/src/mem/slicc/parser.py',668),
  ('aexpr -> IS_INVALID ( var )','aexpr',4,'p_expr__is_invalid_ptr','/home/ys/gem5/src/mem/slicc/parser.py',672),
  ('literal -> STRING','literal',1,'p_literal__string','/home/ys/gem5/src/mem/slicc/parser.py',676),
  ('literal -> NUMBER','literal',1,'p_literal__number','/home/ys/gem5/src/mem/slicc/parser.py',680),
  ('literal -> FLOATNUMBER','literal',1,'p_literal__float','/home/ys/gem5/src/mem/slicc/parser.py',684),
  ('literal -> LIT_BOOL','literal',1,'p_literal__bool','/home/ys/gem5/src/mem/slicc/parser.py',688),
  ('enumeration -> ident : ident','enumeration',3,'p_enumeration','/home/ys/gem5/src/mem/slicc/parser.py',692),
  ('var -> ident','var',1,'p_var','/home/ys/gem5/src/mem/slicc/parser.py',696),
]
